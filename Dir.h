#ifndef DIR_H
#define DIR_H

# include <iostream>

#include<string>
#include<vector>

using namespace std;

// can the owning user and size always be the same???????????????????????????????????????????????????????????????????????????????????????????????????
// no way to make vector of pointers to both dir and file objects right??????????????????????????????????????????????????????????????????????????????????
// should ls go to new line?????????????????????????????????????????????????????????????????????????????????????????????????
//ok if ls lists all dirs THEN all files???????????????????????????????????????????????????????????????????????????????

class Dir
{

public:
	string m_owning_user = "owning_user";
	int m_size = 888;
	string m_last_date_modified;
	string m_name;
	vector<Dir*> m_child_dir_vec;

	Dir(const string name)
	{
		m_name = name;
	}

	void mkdir(const string new_dir_name)
	{
		Dir *new_dir = new Dir(new_dir_name);
		m_child_dir_vec.push_back(new_dir);

		cout << new_dir->m_name << endl; //`````````````````````````````````````````````````````````````````````````````````````````
	}

	void ls()
	{
		cout << "in ls" << m_child_dir_vec.size() << endl; //````````````````````````````````````````````````````````````````````````````````````
		for(int i = 0 ; i < m_child_dir_vec.size() ; i++)
		{
			cout << i << m_child_dir_vec[i]->m_name << "   ";
		}

		cout << endl;
	}

};
















#endif
