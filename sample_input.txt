mkdir a
mkdir b
touch c.t
touch d.t
cd a
mkdir aa
mkdir bb
touch cc.t
touch cc.tt
rm cc.tt
rmdir bb
cd aa
mkdir aaa
mkdir bbb
touch ccc.t
touch ddd.t
rm ddd.t
rmdir bbb
cd ..
rmdir aa
mkdir ff
cd ff
mkdir dddd
dddd
cd ..
cd ..
rm d.t
rmdir b
quit


//
//	try
//	{
//		cur_dir = parse("mkdir a", cur_dir);
//		cur_dir = parse("mkdir b", cur_dir);
//		cur_dir = parse("touch c.t", cur_dir);
//		cur_dir = parse("touch d.t", cur_dir);
//		cur_dir = parse("cd a", cur_dir);
//		cur_dir = parse("mkdir aa", cur_dir);
//		cur_dir = parse("mkdir bb", cur_dir);
//		cur_dir = parse("touch cc.t", cur_dir);
////		cur_dir = parse("rm cc.t", cur_dir);       //new
//		cur_dir = parse("touch cc.tt", cur_dir);
//		cur_dir = parse("rm cc.tt", cur_dir);
//		cur_dir = parse("rmdir bb", cur_dir);
//		cur_dir = parse("cd aa", cur_dir);
//		cur_dir = parse("mkdir aaa", cur_dir);
//		cur_dir = parse("mkdir bbb", cur_dir);
//		cur_dir = parse("touch ccc.t", cur_dir);
//		cur_dir = parse("touch ddd.t", cur_dir);
//		cur_dir = parse("rm ddd.t", cur_dir);
//		cur_dir = parse("rmdir bbb", cur_dir);
//		cur_dir = parse("cd ..", cur_dir);
//		cur_dir = parse("rmdir aa", cur_dir);
//		cur_dir = parse("mkdir ff", cur_dir);
//		cur_dir = parse("cd ff", cur_dir);
//		cur_dir = parse("mkdir dddd", cur_dir);
//		cur_dir = parse("dddd", cur_dir);
//		cur_dir = parse("cd ..", cur_dir);
//		cur_dir = parse("cd ..", cur_dir);
//		cur_dir = parse("rm d.t", cur_dir);
//		cur_dir = parse("rmdir b", cur_dir);
//		cur_dir = parse("quit", cur_dir);
//	}
//	catch(...)
//	{
//		cout << "caught something" << endl;//``````````````````````````````````````````````````````````````````````
//	}
//